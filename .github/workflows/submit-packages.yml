name: Submit to Package Managers

on:
  push:
    branches: [ main ]
    paths:
      - 'homebrew/**'
      - 'scoop/**'
      - 'aur/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to submit (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: read

jobs:
  submit-homebrew:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'chore: update package managers') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v4

    - name: Create Homebrew PR
      run: |
        echo "🍺 Homebrew submission would happen here"
        echo "Next steps:"
        echo "1. Fork homebrew-core repository"
        echo "2. Add formula to Formula/devswitch.rb"
        echo "3. Create pull request"
        echo ""
        echo "Formula content:"
        cat homebrew/devswitch.rb

  submit-scoop:
    runs-on: ubuntu-latest  
    if: contains(github.event.head_commit.message, 'chore: update package managers') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v4

    - name: Create Scoop bucket
      run: |
        echo "🪣 Scoop submission would happen here"
        echo "Next steps:"
        echo "1. Create scoop-bucket repository"
        echo "2. Add manifest to bucket/devswitch.json"
        echo "3. Users can add bucket with: scoop bucket add GustyCube https://github.com/GustyCube/scoop-bucket"
        echo ""
        echo "Manifest content:"
        cat scoop/devswitch.json

  submit-aur:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'chore: update package managers') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v4

    - name: Prepare AUR submission
      run: |
        echo "🏛️ AUR submission would happen here"
        echo "Next steps:"
        echo "1. Clone AUR repository: git clone ssh://aur@aur.archlinux.org/devswitch.git"
        echo "2. Copy PKGBUILD and .SRCINFO"
        echo "3. Commit and push to AUR"
        echo ""
        echo "PKGBUILD content:"
        cat aur/PKGBUILD
        echo ""
        echo ".SRCINFO content:"
        cat aur/.SRCINFO

  create-packages:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'chore: update package managers') || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            arch: amd64
            format: deb
          - os: ubuntu-22.04  
            arch: amd64
            format: deb
          - os: fedora-38
            arch: x86_64
            format: rpm
          - os: fedora-39
            arch: x86_64
            format: rpm
    steps:
    - uses: actions/checkout@v4

    - name: Download release binary
      run: |
        VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
        if [[ "${{ matrix.format }}" == "deb" ]]; then
          curl -L "https://github.com/${{ github.repository }}/releases/download/$VERSION/devswitch-linux-amd64" -o devswitch
        else
          curl -L "https://github.com/${{ github.repository }}/releases/download/$VERSION/devswitch-linux-amd64" -o devswitch
        fi
        chmod +x devswitch

    - name: Create DEB package
      if: matrix.format == 'deb'
      run: |
        VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
        VERSION=${VERSION#v}
        
        # Create package structure
        mkdir -p devswitch_${VERSION}/DEBIAN
        mkdir -p devswitch_${VERSION}/usr/bin
        
        # Copy files
        cp debian/control devswitch_${VERSION}/DEBIAN/
        cp devswitch devswitch_${VERSION}/usr/bin/
        
        # Update version in control file
        sed -i "s/Version: .*/Version: $VERSION/" devswitch_${VERSION}/DEBIAN/control
        
        # Build package
        dpkg-deb --build devswitch_${VERSION}
        
        echo "📦 DEB package created: devswitch_${VERSION}.deb"

    - name: Create RPM package
      if: matrix.format == 'rpm'
      run: |
        echo "🎩 RPM package creation would happen here"
        echo "Using rpmbuild with rpm/devswitch.spec"
        cat rpm/devswitch.spec

  notify-completion:
    needs: [submit-homebrew, submit-scoop, submit-aur, create-packages]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Package submission summary
      run: |
        echo "📦 Package Manager Submission Complete!"
        echo ""
        echo "✅ Next manual steps:"
        echo "1. 🍺 Submit Homebrew formula to homebrew-core"
        echo "2. 🪣 Create and populate Scoop bucket repository"  
        echo "3. 🏛️ Submit PKGBUILD to AUR"
        echo "4. 📦 Upload DEB/RPM packages to package repositories"
        echo ""
        echo "🚀 Automated updates will happen on future releases!"